name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  frontend_tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: npm install
        run: cd frontend && npm install
      - name: build
        run: cd frontend && npm run build
      - name: test
        run: cd frontend && npm run test
  backend_tests:
    runs-on: ubuntu-20.04
    needs: frontend_tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: npm install backend
        run: cd backend && npm install
      - name: permissions for node_modules
        run: cd backend && chmod -R a+x node_modules
      - name: test
        run: cd backend && npm run test
  e2e_tests:
    runs-on: ubuntu-20.04
    needs: backend_tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: npm install backend
        run: cd backend && npm install
      - name: npm install frontend
        run: cd frontend && npm install 
      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          start: cd ../backend && npm run start:test
          working-directory: frontend
  deploy:
    name: Deploy app
    if: ${{ github.event_name == 'push' && !contains(join(github.event.head_commit.message), '#skip') }}
    needs: e2e_tests
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: move to repo
        run: cd backend
      - name: npm install
        run: npm install
      - name: build ui
        run: npm run build:ui
      - name: deploy
        run: flyctl deploy --remote-only
  webhook:
    name: Send notification
    runs-on: ubuntu-20.04
    needs: [e2e_tests, deploy]
    if: ${{ always() && !cancelled() && github.event_name == 'push' }}
    steps:
      - name: Tests and build succeeded
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ always() && contains(needs.simple_tests.result, 'success') && contains(needs.deploy.result, 'success') }}
        with:
            severity: success
            username: CICD Bot
            description: A new version of the application has been deployed.
            color: '#4BB543'
            text: Tests and deployment succeeded .
            details: "The deployed application is available at ${{ secrets.FLY_APP_URI }} by ${{ github.actor }}"
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}     
      - name: Deployment failed
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ always() && contains(needs.deploy.result, 'failure') && contains(needs.simple_tests.result, 'success') }}
        with:
            severity: error
            username: CICD Bot
            color: '#DDDDDD'
            text: App deployment failed.
            details: Something wrong with the deployment process. The application was not deployed!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Tests failed
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ always() && contains(needs.simple_tests.result, 'failure')}}
        with:
            severity: error
            username: CICD Bot
            color: '#DB0F13'
            text: Tests and build failed.
            details: Workflow failed application was not deployed
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  tag-release:
    name: Tag release
    env:
      COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
    if: ${{ github.event_name == 'push' && !contains(join(github.event.head_commit.message), '#skip') }}
    needs: [e2e_tests]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@ce4b5ffa38e072fa7a901e417253c438fcc2ccce
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
