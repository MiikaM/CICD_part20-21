name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  tests:
    runs-on: ubuntu-20.04
    env: 
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: npm install
        run: cd frontend && npm install
      - name: build frontend
        run: cd frontend && npm run build
      - name: test frontend
        run: cd frontend && npm run test
      - name: npm install backend
        run: cd backend && npm install
      - name: permissions for node_modules backend
        run: cd backend && chmod -R a+x node_modules
      - name: test backend
        run: cd backend && npm run test
      - name: verify cypress
        run: cd frontend && npx cypress verify
      - name: e2e tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          start: npm run test:server
          install: false
          wait-on: http://localhost:3000      
  deploy:
    name: Deploy app
    if: ${{ github.event_name == 'push' && !contains(join(github.event.head_commit.message), '#skip') }}
    needs: test
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: npm install backend
        run: cd backend && npm install
      - name: npm install frontend
        run: cd frontend && npm install
      - name: build ui
        run: cd backend && npm run build:ui
      - name: deploy
        run: cd backend && flyctl deploy --remote-only
  webhook:
    name: Send Discord notification
    runs-on: ubuntu-20.04
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }} 
    needs: [tests, deploy]
    if: ${{ always() && !cancelled() && github.event_name == 'push' }}
    steps:
      - name: Tests and build succeeded
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        if: ${{ always() && contains(needs.tests.result, 'success') && contains(needs.deploy.result, 'success') }}
        with:
          args: "Tests and deployment succeeded for ${{ github.repository }} by ${{ github.actor }}"
      - name: Deployment failed
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        if: ${{ always() && contains(needs.deploy.result, 'failure') && contains(needs.tests.result, 'success') }}
        with:
          args: "Deployment failed for ${{ github.repository }} by ${{ github.actor }}"
      - name: Tests failed
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        if: ${{ always() && contains(needs.tests.result, 'failure')}}
        with:
          args: "Tests failed for ${{ github.repository }} by ${{ github.actor }}"
  tag-release:
    name: Tag release
    env:
      COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
    if: ${{ github.event_name == 'push' && !contains(join(github.event.head_commit.message), '#skip') }}
    needs: [deploy]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@ce4b5ffa38e072fa7a901e417253c438fcc2ccce
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
