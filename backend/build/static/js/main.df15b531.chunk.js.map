{"version":3,"sources":["services/blogs.js","components/LogInForm.js","services/login.js","components/Notification.js","components/Blog.js","components/BlogList.js","components/BlogForm.js","components/Togglable.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","console","log","put","setToken","newToken","deleteObject","delete","LogInForm","LoggingIn","useState","username","setUsername","password","setPassword","logIn","event","preventDefault","onSubmit","type","value","name","onChange","target","login","credentials","Notification","message","className","Blog","blog","deleteBlog","addLikes","view","setView","hideWhenVisible","display","showWhenVisible","toggleView","style","title","author","onClick","url","likes","likedBlog","BlogList","blogs","handleLike","sortedBlogs","sort","b","map","key","BlogForm","createBlog","setTitle","setAuthor","setUrl","addBlog","trim","Togglable","React","forwardRef","props","ref","displayName","visible","setVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","App","setBlogs","user","setUser","errorMessage","setErrorMessage","blogFormRef","createRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","notification","setTimeout","handleLogOut","clear","handleLogin","loggedUser","loginService","setItem","stringify","blogObject","current","newBlog","concat","error","filter","updatedBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df15b531.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  console.log('id on ', id)\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteObject = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken, deleteObject }","import React, { useState } from 'react'\r\n\r\nconst LogInForm = ({ LoggingIn }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handlePassword = event => setPassword(event.target.value)\r\n  const handleUsername = event => setUsername(event.target.value)\r\n\r\n  const logIn = async (event) => {\r\n    event.preventDefault()\r\n\r\n    LoggingIn({\r\n      username: username,\r\n      password: password\r\n    })\r\n\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={logIn}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={handleUsername}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={handlePassword}\r\n          />\r\n        </div>\r\n        <button id='login-button' type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogInForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  console.log('credentials are', credentials)\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\n/**\r\n * Displays a notification with styles if the message is an error it uses error styles and if it's \r\n * a notification then it uses notification styles\r\n * @param {message} message is the message that tells what has happened \r\n */\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  console.log('message o', message)\r\n\r\n  return (\r\n    <div className={message.type} >\r\n      {message.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\n\r\n\r\n\r\nconst Blog = ({ blog, deleteBlog, addLikes }) => {\r\n  const [view, setView] = useState(false)\r\n\r\n  const hideWhenVisible = { display: view ? 'none' : '' }\r\n  const showWhenVisible = { display: view ? '' : 'none' }\r\n\r\n  const toggleView = () => {\r\n    setView(!view)\r\n  }\r\n\r\n  const deleteObject = () => {\r\n    deleteBlog(blog.id)\r\n  }\r\n\r\n  const handleLike = () => {\r\n    const likedBlog = {\r\n      likes: blog.likes + 1,\r\n      title: blog.title,\r\n      author: blog.author,\r\n      url: blog.url\r\n    }\r\n\r\n    addLikes( blog.id, likedBlog)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='blog' style={hideWhenVisible}>\r\n        {blog.title} {blog.author}\r\n        <button onClick={toggleView}>view</button>\r\n      </div>\r\n      <div className='blog2' style={showWhenVisible}>\r\n        Title: {blog.title} <button onClick={toggleView}>hide</button> <br />\r\n        url: {blog.url} <br />\r\n        likes: {blog.likes}\r\n        <button onClick={handleLike}>like</button><br />\r\n        Author: {blog.author} <br />\r\n        <button onClick={deleteObject}>remove</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport Blog from './Blog'\r\n\r\n\r\nconst BlogList = ({ blogs, deleteBlog, handleLike }) => {\r\n  let sortedBlogs = blogs.sort((a, b) => b.likes - a.likes)\r\n  return (\r\n    <div id='blogList'>\r\n      <h2>Blogs</h2>\r\n      {\r\n        sortedBlogs.map(blog =>\r\n          <Blog key={blog.id} blog={blog} deleteBlog={deleteBlog} addLikes={handleLike} />\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default BlogList","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleTitle = event => setTitle(event.target.value)\r\n  const handleAuthor = event => setAuthor(event.target.value)\r\n  const handleUrl = event => setUrl(event.target.value)\r\n\r\n  const addBlog = async (event) => {\r\n    event.preventDefault()\r\n\r\n    createBlog({\r\n      title: title.trim(),\r\n      author: author.trim(),\r\n      url: url.trim(),\r\n    })\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addBlog}>\r\n      <div>\r\n        title:\r\n        <input\r\n          id='title'\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={handleTitle}\r\n        />\r\n      </div>\r\n      <div>\r\n        author:\r\n        <input\r\n          id='author'\r\n          type=\"text\"\r\n          value={author}\r\n          onChange={handleAuthor}\r\n        />\r\n      </div>\r\n      <div>\r\n        url:\r\n        <input\r\n          id='url'\r\n          type=\"text\"\r\n          value={url}\r\n          onChange={handleUrl}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">save</button>\r\n    </form >\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\r\n  Togglable.displayName = 'Togglable'\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import React, { useState, useEffect } from 'react'\r\nimport blogService from './services/blogs'\r\nimport LogInForm from './components/LogInForm'\r\nimport loginService from './services/login'\r\nimport Notification from './components/Notification'\r\nimport BlogList from './components/BlogList'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll()\r\n      .then(blogs =>\r\n        setBlogs(blogs)\r\n      )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const notification = (message, type = 'notification') => {\r\n    setErrorMessage({ message, type })\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleLogOut = async () => {\r\n    window.localStorage.clear()\r\n  }\r\n\r\n  const handleLogin = async (loggedUser) => {\r\n    try {\r\n      const user = await loginService.login(loggedUser)\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      notification(`You have logged in as ${user.name}`)\r\n    } catch (exception) {\r\n      notification('wrong credentials', 'error')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const addBlog = async (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    try {\r\n      const newBlog = await blogService.create(blogObject)\r\n      setBlogs(blogs.concat(newBlog))\r\n      notification(`New Blog: ${blogObject.title} by ${blogObject.author} has been added`)\r\n    } catch (exception) {\r\n      notification(exception.response.data.error, 'error')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const deleteBlog = async (id) => {\r\n\r\n    console.log('eventti o', id)\r\n\r\n    try {\r\n      await blogService.deleteObject(id)\r\n      setBlogs(blogs.filter(blog => blog.id !== id))\r\n      notification('Blog has been removed')\r\n    } catch (exception) {\r\n      notification(exception.response.data.error, 'error')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLike = async ( id, blogObject) => {\r\n    console.log('blogi o', blogObject)\r\n    console.log('Blogin id on', id)\r\n    try {\r\n      const updatedBlog = await blogService.update(id, blogObject)\r\n      console.log('updated blog o', updatedBlog)\r\n      setBlogs(blogs.map(blog => blog.id !== updatedBlog.id ? blog : updatedBlog))\r\n      notification(`You liked the blog '${blogObject.title}'`)\r\n    } catch (exception) {\r\n      console.log('error o', exception.response.data.error)\r\n      notification(exception.response.data.error, 'error')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const LoginView = () => (\r\n    <Togglable buttonLabel='login' >\r\n      <LogInForm LoggingIn={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  const BlogView = () => (\r\n    <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\r\n      <h3>Create new blog</h3>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2>BlogApp</h2>\r\n      <Notification message={errorMessage} />\r\n      {\r\n        user === null ?\r\n          LoginView() :\r\n          <div>\r\n            <p>{user.name} logged in<button onClick={handleLogOut}>logout</button></p>\r\n            {BlogView()}\r\n            <BlogList blogs={blogs} deleteBlog={deleteBlog} handleLike={handleLike} />\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './App.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}